#!/bin/bash
set -e

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TOTAL_POSTS=3200000
BATCH_SIZE=50000
DB_USER="news_user"
DB_NAME="news_db"
CPP_SERVER_URL="http://localhost:8080/health"

# --- 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ ---
echo "üöÄ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker compose down -v --remove-orphans

# --- 2. –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤ ---
echo "üõ† –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."
docker compose build --no-cache

# --- 3. –ü–æ–¥–Ω–∏–º–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã ---
echo "‚¨ÜÔ∏è –ü–æ–¥–Ω–∏–º–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker compose up -d

# --- 4. –ñ–¥—ë–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL ---
echo "‚è≥ –ñ–¥—ë–º –∑–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
until docker compose exec -T db pg_isready -U $DB_USER -d $DB_NAME > /dev/null 2>&1; do
    echo "Waiting for PostgreSQL..."
    sleep 2
done
echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤!"

# --- 5. –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü ---
echo "üßπ –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã..."
docker compose exec -T db psql -U $DB_USER -d $DB_NAME <<EOF
TRUNCATE TABLE post_tags, posts, news_texts, authors, channels, sources, tags, comments, media CASCADE;
EOF

# --- 6. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, –∞–≤—Ç–æ—Ä–æ–≤, —Ç–µ–∫—Å—Ç–æ–≤ –∏ —Ç–µ–≥–æ–≤ ---
echo "üì• –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –∞–≤—Ç–æ—Ä–æ–≤, —Ç–µ–∫—Å—Ç—ã –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Ç–µ–≥–∏..."
docker compose exec -T db psql -U $DB_USER -d $DB_NAME <<EOF
-- –ò—Å—Ç–æ—á–Ω–∏–∫–∏
INSERT INTO sources (name, address)
SELECT '–ò—Å—Ç–æ—á–Ω–∏–∫ #' || g, 'https://source' || g || '.com'
FROM generate_series(1, 10) g;

-- –ê–≤—Ç–æ—Ä—ã
INSERT INTO authors (name)
SELECT '–ê–≤—Ç–æ—Ä #' || g FROM generate_series(1, 80000) g;

-- –¢–µ–∫—Å—Ç—ã –Ω–æ–≤–æ—Å—Ç–µ–π
INSERT INTO news_texts (text)
SELECT '–¢–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ –Ω–æ–º–µ—Ä ' || g FROM generate_series(1, $TOTAL_POSTS) g;

-- –¢–µ–≥–∏
INSERT INTO tags (name)
SELECT '–¢–µ–≥ #' || g FROM generate_series(1, 10000) g;
EOF

# --- 7. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞–Ω–∞–ª–æ–≤ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ source_id ---
echo "üì∫ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª—ã..."
docker compose exec -T db psql -U $DB_USER -d $DB_NAME <<EOF
INSERT INTO channels (name, link, subscribers_count, source_id, topic)
SELECT 
    '–ö–∞–Ω–∞–ª #' || g,
    'https://channel' || g || '.com',
    (random() * 10000)::int,
    s.source_id,
    '–¢–µ–º–∞ ' || ((g % 6) + 1)
FROM generate_series(1, 50) g
JOIN sources s ON s.source_id = ((g - 1) % (SELECT COUNT(*) FROM sources) + 1);
EOF

# --- 8. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤, post_tags, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ –º–µ–¥–∏–∞ –ø–æ –±–∞—Ç—á–∞–º ---
echo "üì∞ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã, —Ç–µ–≥–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –º–µ–¥–∏–∞..."
for ((i=1; i<=TOTAL_POSTS; i+=BATCH_SIZE)); do
docker compose exec -T db psql -U $DB_USER -d $DB_NAME <<EOF
DO \$\$
DECLARE
    g INT;
    total_authors INT := (SELECT COUNT(*) FROM authors);
    total_tags INT := (SELECT COUNT(*) FROM tags);
    comment_count INT;
    media_count INT;
    c INT;
BEGIN
    FOR g IN 1..$BATCH_SIZE LOOP
        -- –í—Å—Ç–∞–≤–∫–∞ –ø–æ—Å—Ç–∞ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º channel_id
        INSERT INTO posts (title, author_id, text_id, channel_id, comments_count, likes_count, created_at)
        VALUES (
            '–ù–æ–≤–æ—Å—Ç—å #' || (g + $i - 1),
            FLOOR(random() * total_authors + 1)::int,
            (g + $i - 1),
            (SELECT channel_id FROM channels ORDER BY random() LIMIT 1),
            0,
            FLOOR(random() * 500)::int,
            NOW() - ((g + $i - 1) || ' seconds')::interval
        );

        -- –°–≤—è–∑–∏ —Å —Ç–µ–≥–∞–º–∏
        INSERT INTO post_tags (post_id, tag_id)
        VALUES ((g + $i - 1), FLOOR(random() * total_tags + 1)::int)
        ON CONFLICT DO NOTHING;

        -- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ (0-5)
        comment_count := FLOOR(random() * 6)::int;
        FOR c IN 1..comment_count LOOP
            INSERT INTO comments (post_id, nickname, text, likes_count)
            VALUES (
                (g + $i - 1),
                '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #' || FLOOR(random()*10000 + 1)::int,
                '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–æ—Å—Ç—É #' || (g + $i - 1),
                FLOOR(random() * 100)::int
            );
        END LOOP;

        -- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ–¥–∏–∞ (0-3)
        media_count := FLOOR(random() * 4)::int;
        FOR c IN 1..media_count LOOP
            INSERT INTO media (post_id, media_content)
            VALUES (
                (g + $i - 1),
                'https://media.example.com/' || FLOOR(random()*10000 + 1)::int || '.jpg'
            );
        END LOOP;
    END LOOP;
END \$\$;
EOF
echo "Inserted $((i + BATCH_SIZE - 1)) / $TOTAL_POSTS posts with comments and media"
done

# --- 9. –ñ–¥—ë–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ C++ —Å–µ—Ä–≤–µ—Ä–∞ ---
echo "üåç –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ C++ —Å–µ—Ä–≤–µ—Ä–∞..."
until curl -s $CPP_SERVER_URL > /dev/null; do
    echo "Waiting for C++ server..."
    sleep 2
done
echo "‚úÖ C++ —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤!"

# --- 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö ---
echo "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞: –≤—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 5 –ø–æ—Å—Ç–æ–≤..."
docker compose exec -T db psql -U $DB_USER -d $DB_NAME -c "SELECT post_id, title, created_at FROM posts LIMIT 5;"

echo "üéâ –í—Å—ë –≥–æ—Ç–æ–≤–æ! –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ http://localhost:8080"
