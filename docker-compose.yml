services:
  db-master:
    image: postgres:15
    container_name: postgres-master
    environment:
      POSTGRES_USER: news_user
      POSTGRES_PASSWORD: news_pass
      POSTGRES_DB: news_db
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./db/tmp.sql:/docker-entrypoint-initdb.d/tmp.sql:ro
      - ./db/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - postgres_master_data:/var/lib/postgresql/data
    command: |
      postgres
      -c wal_level=replica
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c hot_standby=on
      -c hba_file=/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U news_user -d news_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-replica:
    image: postgres:15
    container_name: postgres-replica
    environment:
      POSTGRES_USER: news_user
      POSTGRES_PASSWORD: news_pass
      POSTGRES_DB: news_db
    ports:
      - "5434:5432"
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
      - ./db/init-replica.sh:/docker-entrypoint-initdb.d/init-replica.sh:ro
    depends_on:
      db-master:
        condition: service_healthy
    command: |
      postgres
      -c hot_standby=on
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U news_user -d news_db"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      db-master:
        condition: service_healthy
      db-replica:
        condition: service_healthy
    environment:
      - WAIT_HOSTS=db-master:5432,db-replica:5432,redis:6379
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=5
      - WAIT_HOST_CONNECT_TIMEOUT=30
    ports:
      - "8080:8080"

  researcher-vk:
    build:
      context: .
      dockerfile: ./researchers/vk/Dockerfile
    depends_on:
      server:
        condition: service_started
    volumes:
      - ./config/researchers.xml:/usr/local/etc/vk-researcher/test_conf.xml
      - ./researchers/vk/access_token:/usr/local/etc/vk-researcher/access_token
  backup:
    build:
      context: ./backups
      dockerfile: Dockerfile
    container_name: postgres-backup
    environment:
      POSTGRES_USER: news_user
      POSTGRES_PASSWORD: news_pass
    volumes:
      - ./backups:/backups
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      db-master:
        condition: service_healthy
      db-replica:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep cron | grep -v grep"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_master_data:
  postgres_replica_data: